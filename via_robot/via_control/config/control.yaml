via_joint_publisher:
  type: joint_state_controller/JointStateController
  publish_rate: 50

via_velocity_controller:
  type: "diff_drive_controller/DiffDriveController"
  left_wheel: ['wheel_FL_joint', 'wheel_RL_joint']
  right_wheel: ['wheel_FR_joint', 'wheel_RR_joint']
  publish_rate: 50
  pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
  twist_covariance_diagonal: [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03]
  cmd_vel_timeout: 0.25

  # Base frame_id
  base_frame_id: base_footprint

  # Publishes TF odom->base_frame_id based on the wheels' encoders
  # (set to false if using robot_localization) 
  enable_odom_tf: false

  # Wheel separation and radius. These are both optional.
  # diff_drive_controller will attempt to read either one or both from the
  # URDF if not specified as a parameter
  wheel_separation : 1.74
  wheel_radius : 0.314

  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.0 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0

  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : false
      max_velocity           : 2.0   # m/s
      has_acceleration_limits: false
      max_acceleration       : 20.0   # m/s^2
  angular:
    z:
      has_velocity_limits    : false
      max_velocity           : 4.0   # rad/s
      has_acceleration_limits: false
      max_acceleration       : 25.0   # rad/s^2

#gazebo_ros_control:
#  pid_gains:
#    wheel_FL_joint: {p: 1.0, i: 0.0, d: 0.0}
#    wheel_RL_joint: {p: 1.0, i: 0.0, d: 0.0}
#    wheel_FR_joint: {p: 1.0, i: 0.0, d: 0.0}
#    wheel_RR_joint: {p: 1.0, i: 0.0, d: 0.0}

